#! /bin/bash

pd_dir="./pd_auto"
collision=1
lattice_speed=1
skip_ts=200
loop=1

usage() {
	echo "Usage: speed_test [OPTION]"
	echo -e "\nOption:"
	echo -e "\t-i [EXP_DIR], experiments dir"
	echo -e "\t-k {PD_DIR}, pd file dir (default pd_auto)"
	echo -e "\t-h , Print this help page"
}

while getopts ":i:k:h" o;do
	case $o in
		i)
			exp=$OPTARG
			;;
		k)
			pd_dir_read=$OPTARG
			;;
		h)
			usage
			;;
		*)
			usage
			;;
	esac
done
shift $((OPTIND-1))
if [ -z "$exp" ] ;then
	usage
	exit
fi
x=`head -n 1 $exp/a.nd | cut -d ' ' -f 1`
y=`head -n 1 $exp/a.nd | cut -d ' ' -f 2`

if [ -z "$pd_dir_read" ];then
	mkdir -p $pd_dir 2> /dev/null
	rm $pd_dir/* 2> /dev/null
	./pd_gen_auto -x $x -y $y
else
	pd_dir=`echo $pd_dir_read`
fi
echo '#Syntax: pdFileName[platform device localSize1 localSize2] realTime(secs)'
echo '#'
printf "Working on..."
printf '' > .speed_test_rst
pdFileNum=`ls $pd_dir | wc -l`
num=0
ls $pd_dir | grep .pd | while read file;do
	num=$((num+1))
	printf "\rWorking on...($num/$pdFileNum)"
	info=`cat $pd_dir/$file | sed 's/ /\//g'`
	Time=`{ time -p ./simulator $exp; }  2>&1 > /dev/null`
	if [ "$?" -eq "0" ];then
		realTime=`echo $Time | cut -d ' ' -f 2`
		printf "%-50s\t" "$file[$info]" >> .speed_test_rst
		echo $realTime >> .speed_test_rst
	fi
done
printf "\rWorking on...completed!\n"
sort .speed_test_rst -nk 2,2
rm .speed_test_rst

